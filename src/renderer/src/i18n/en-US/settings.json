{
  "title": "Settings",
  "common": {
    "title": "Common Settings",
    "resetData": "Reset Data",
    "language": "Language",
    "languageSelect": "Select language",
    "searchEngine": "Search Engine",
    "searchEngineSelect": "Select search engine",
    "searchPreview": "Search Preview",
    "searchAssistantModel": "Assistant Model",
    "selectModel": "Select Model",
    "proxyMode": "Proxy Mode",
    "proxyModeSelect": "Select proxy mode",
    "proxyModeSystem": "System Proxy",
    "proxyModeNone": "No Proxy",
    "proxyModeCustom": "Custom Proxy",
    "customProxyUrl": "Custom Proxy URL",
    "customProxyUrlPlaceholder": "Example: http://127.0.0.1:7890",
    "invalidProxyUrl": "Invalid proxy URL, please enter valid http/https URL",
    "addCustomSearchEngine": "Add Custom Search Engine",
    "addCustomSearchEngineDesc": "Add a new search engine by providing a name and search URL. The URL must include {query} as the query placeholder.",
    "searchEngineName": "Search Engine Name",
    "searchEngineNamePlaceholder": "Enter search engine name",
    "searchEngineUrl": "Search URL",
    "searchEngineUrlPlaceholder": "Ex: https://a.com/search?q={'{'}query{'}'}",
    "searchEngineUrlError": "URL must include {'{'}query{'}'} as the query placeholder",
    "deleteCustomSearchEngine": "Delete Custom Search Engine",
    "deleteCustomSearchEngineDesc": "Are you sure you want to delete the custom search engine \"{name}\"? This action cannot be undone.",
    "testSearchEngine": "Test Search Engine",
    "testSearchEngineDesc": "A test search for \"weather\" will be performed using the {engine} search engine.",
    "testSearchEngineNote": "If the search page requires login or other actions, you can perform them in the test window. Please close the test window when you're done.",
    "theme": "Theme",
    "themeSelect": "Select theme",
    "closeToQuit": "Exit app when closing window",
    "contentProtection": "Screen Protection",
    "contentProtectionDialogTitle": "Confirm Screen Protection Change",
    "contentProtectionEnableDesc": "Enabling screen protection prevents screen sharing software from capturing the DeepChat window, protecting your content privacy. Note that this feature will not completely hide all interfaces. Please use this feature responsibly and in compliance with regulations. Additionally, not all screen sharing software supports this feature. Additionally, some environments may leave a black window.",
    "contentProtectionDisableDesc": "Disabling screen protection will allow screen sharing software to capture the DeepChat window.",
    "contentProtectionRestartNotice": "Changing this setting will restart the application. Do you want to continue?",
    "loggingEnabled": "Enable Logging",
    "loggingDialogTitle": "Confirm Logging Setting Change",
    "loggingEnableDesc": "Enabling logging will help us diagnose issues and improve the application. Log files may contain sensitive information.",
    "loggingDisableDesc": "Disabling logging will stop collecting application logs.",
    "loggingRestartNotice": "Changing this setting will restart the application. Do you want to continue?",
    "openLogFolder": "Open Log Folder",
    "shortcut": {
      "newChat": "Create a new chat",
      "title": "Shortcut key settings"
    },
    "notifications": "System Notification",
    "notificationsDesc": "When DeepChat is not in the foreground, if a session is generated, a system notification will be sent"
  },
  "data": {
    "title": "Data Settings",
    "syncEnable": "Enable Data Sync",
    "syncFolder": "Sync Folder",
    "openSyncFolder": "Open Sync Folder",
    "lastSyncTime": "Last Sync Time",
    "never": "Never",
    "startBackup": "Backup Now",
    "backingUp": "Backing up...",
    "importData": "Import Data",
    "incrementImport": "Incremental Import",
    "overwriteImport": "Overwrite Import",
    "importConfirmTitle": "Confirm Data Import",
    "importConfirmDescription": "Importing will overwrite all current data, including chat history and settings. Make sure you have backed up important data. You'll need to restart the application after import.",
    "importing": "Importing...",
    "confirmImport": "Confirm Import",
    "importSuccessTitle": "Import Successful",
    "importErrorTitle": "Import Failed"
  },
  "model": {
    "title": "Model Settings",
    "systemPrompt": {
      "label": "System Prompt",
      "placeholder": "Please enter the system prompt...",
      "description": "Set the system prompt for the AI assistant to define its behavior and role"
    },
    "temperature": {
      "label": "Model Temperature",
      "description": "Controls the randomness of the output; higher values produce more creative responses"
    },
    "contextLength": {
      "label": "Context Length",
      "description": "Set the maximum length of the conversation context"
    },
    "responseLength": {
      "label": "Response Length",
      "description": "Set the maximum length of the AI response"
    },
    "artifacts": {
      "description": "Enabling the Artifacts feature allows the AI to generate richer content",
      "title": "Artifacts effects"
    },
    "addModel": "Add a model",
    "configureModel": "Configuration model",
    "modelList": "Model List",
    "provider": "Service provider",
    "providerSetting": "Service provider settings",
    "selectModel": "Select a model"
  },
  "provider": {
    "enable": "Enable Service",
    "urlPlaceholder": "Please enter API URL",
    "keyPlaceholder": "Please enter API Key",
    "verifyKey": "Verify Key",
    "howToGet": "How to get",
    "getKeyTip": "Please visit",
    "getKeyTipEnd": "to get API Key",
    "urlFormat": "API Example: {defaultUrl}",
    "modelList": "Model List",
    "enableModels": "Enable Models",
    "disableAllModels": "Disable All Models",
    "modelsEnabled": "Models have been enabled",
    "verifyLink": "Verify Link",
    "syncModelsFailed": "Failed to sync models...",
    "addCustomProvider": "Add Custom Provider",
    "delete": "Delete",
    "stopModel": "Stop Model",
    "pulling": "Pulling...",
    "runModel": "Run Model",
    "dialog": {
      "disableModel": {
        "title": "Confirm Disable Model",
        "content": "Are you sure you want to disable model \"{name}\"?",
        "confirm": "Disable"
      },
      "disableAllModels": {
        "title": "Confirm Disable All Models",
        "content": "Are you sure you want to disable all models?",
        "confirm": "Disable All"
      },
      "configModels": {
        "title": "Configure Model List"
      },
      "verify": {
        "missingFields": "Please enter API Key and API URL",
        "failed": "Verification failed",
        "success": "Verification successful"
      },
      "addCustomProvider": {
        "title": "Add Custom Provider",
        "description": "Please fill in the necessary information for the provider",
        "name": "Name",
        "namePlaceholder": "Please enter the provider name",
        "apiType": "API Type",
        "apiTypePlaceholder": "Please select the API type",
        "apiKey": "API Key",
        "apiKeyPlaceholder": "Please enter the API key",
        "baseUrl": "API Base URL",
        "baseUrlPlaceholder": "Please enter the API base URL",
        "enable": "Enable Provider"
      },
      "deleteProvider": {
        "title": "Confirm Delete Provider",
        "content": "Are you sure you want to delete provider \"{name}\"? This action cannot be undone.",
        "confirm": "Delete"
      },
      "deleteModel": {
        "title": "Confirm Delete Model",
        "content": "Are you sure you want to delete model \"{name}\"? This action cannot be undone.",
        "confirm": "Delete"
      },
      "pullModel": {
        "title": "Pull Model",
        "pull": "Pull"
      }
    },
    "pullModels": "Pull Models",
    "refreshModels": "Refresh Models",
    "modelsRunning": "Running Models",
    "runningModels": "Running Models",
    "noRunningModels": "No Running Models",
    "deleteModel": "Delete Model",
    "deleteModelConfirm": "Are you sure you want to delete model \"{name}\"? This action cannot be undone.",
    "noLocalModels": "No Local Models",
    "localModels": "Local Models",
    "azureApiVersion": "API Version",
    "safety": {
      "title": "Safety settings"
    },
    "serverList": "Server List",
    "totalServers": "Total Servers",
    "addServer": "Add Server",
    "autoStart": "Self-start",
    "githubCopilotAuth": "GitHub Copilot Authentication",
    "githubCopilotConnected": "GitHub Copilot Connected",
    "githubCopilotNotConnected": "GitHub Copilot Not Connected",
    "loginWithGitHub": "Login with GitHub",
    "loggingIn": "Logging in...",
    "githubCopilotLoginTip": "Click to authorize DeepChat to access your GitHub Copilot subscription",
    "loginSuccess": "Login successful",
    "loginFailed": "Login failed",
    "tokenValid": "Token is valid",
    "tokenInvalid": "Token is invalid",
    "disconnect": "Disconnect",
    "disconnected": "Disconnected successfully",
    "disconnectFailed": "Failed to disconnect"
  },
  "knowledgeBase": {
    "title": "Knowledge Base",
    "baseNone": "None",
    "description": "Currently the search results are retrieved via ",
    "default": "Default Knowledge Base",
    "create": "Create Knowledge Base",
    "loadFileError": "Failed to load file, please try again",
    "loadingFiles": "Loading files...",
    "finishedLoadingFiles": "Finished loading files",
    "stopLoading": "Stop Loading",
    "createSuccess": "Knowledge base created successfully",
    "addDocument": "Add Document",
    "addDocumentFromFileSystem": "Add Document From File System",
    "addDocumentFromWeb": "Add Document From Web",
    "deleteKnowledgeBase": "Delete Knowledge Base",
    "deleteKnowledgeBaseConfirm": "Are you sure you want to delete the knowledge base \"{name}\"? This action cannot be undone.",
    "dragOrClick": "Drag files here or click to select",
    "indexingStatus": {
      "pending": "Pending",
      "processing": "Processing",
      "indexed": "Indexed",
      "error": "Error"
    },
    "fileIndexing": "File Indexing",
    "fileName": "File Name",
    "addTime": "Add Time",
    "size": "Size",
    "status": "Status",
    "operations": "Operations",
    "deleteFile": "Delete File",
    "deleteFileConfirm": "Are you sure you want to delete the file \"{name}\"? This action cannot be undone.",
    "openFile": "Open File",
    "retryIndex": "Retry Index",
    "webPageUrl": "Web Page URL",
    "webPageUrlPlaceholder": "Please enter the web page URL",
    "fetchWebPage": "Fetch Web Page",
    "fetchingWebPage": "Fetching web page...",
    "fetchWebPageSuccess": "Web page fetched successfully",
    "fetchWebPageFailed": "Failed to fetch web page",
    "addWebPageDocument": "Add Web Page Document",
    "webPagePreview": "Web Page Preview"
  },
  "pluginSettings": {
    "title": "Plugin Settings",
    "mcpPlugin": {
      "title": "MCP Plugin",
      "description": "Model Context Protocol (MCP) is an open standard that enables LLMs to securely connect to external data sources and tools.",
      "learnMore": "Learn more about MCP",
      "enable": "Enable MCP Plugin",
      "serverList": "MCP Server List",
      "addServer": "Add MCP Server",
      "deleteServer": "Delete Server",
      "serverName": "Server Name",
      "serverNamePlaceholder": "Enter server name",
      "serverCommand": "Server Command",
      "serverCommandPlaceholder": "Enter server command (e.g., uvx mcp-server-filesystem)",
      "serverArgs": "Server Arguments",
      "serverArgsPlaceholder": "Enter server arguments (optional)",
      "testConnection": "Test Connection",
      "connectionStatus": "Connection Status",
      "connected": "Connected",
      "disconnected": "Disconnected",
      "connectionTesting": "Testing...",
      "serverConfig": "Server Configuration",
      "enableServer": "Enable Server",
      "deleteServerConfirm": "Are you sure you want to delete the MCP server \"{name}\"? This action cannot be undone.",
      "addServerDescription": "Add a new MCP server by providing the necessary configuration.",
      "serverCommandDescription": "The command to start the MCP server. For example: 'uvx mcp-server-filesystem' for filesystem access.",
      "serverArgsDescription": "Additional arguments to pass to the server command. For example: '--base-dir /path/to/directory' for filesystem server.",
      "testConnectionDescription": "Test the connection to the MCP server to ensure it's properly configured.",
      "noServers": "No MCP servers configured",
      "noServersDescription": "Add MCP servers to extend the capabilities of your AI assistants with external tools and data sources.",
      "resourcesAndTools": "Resources & Tools",
      "resources": "Resources",
      "tools": "Tools",
      "noResources": "No resources available",
      "noTools": "No tools available",
      "resourcesDescription": "Resources provided by the MCP server",
      "toolsDescription": "Tools provided by the MCP server"
    }
  },
  "about": {
    "title": "About",
    "version": "Version",
    "description": "An AI-powered chat application",
    "website": "Website",
    "github": "GitHub",
    "license": "License",
    "checkForUpdates": "Check for Updates",
    "noUpdatesAvailable": "No updates available",
    "updateAvailable": "Update available",
    "downloadUpdate": "Download Update",
    "updateDownloaded": "Update downloaded",
    "restartToUpdate": "Restart to update",
    "acknowledgments": "Acknowledgments",
    "openSourceLicenses": "Open Source Licenses",
    "builtWith": "Built with",
    "electronDescription": "Cross-platform desktop app framework",
    "vueDescription": "Progressive JavaScript framework",
    "tailwindDescription": "Utility-first CSS framework"
  },
     "Ollama": "Ollama",
   "GitHub Copilot": "GitHub Copilot",
   "Deepseek": "Deepseek",
   "MiniMax": "MiniMax",
   "Fireworks": "Fireworks",
   "OpenAI": "OpenAI",
   "OpenRouter": "OpenRouter",
   "Gemini": "Gemini",
   "GitHub Models": "GitHub Models",
   "Azure OpenAI": "Azure OpenAI",
   "Anthropic": "Anthropic",
   "Grok": "Grok",
   "Zhipu": "Zhipu",
   "AIHubMix": "AIHubMix",
   "LM Studio": "LM Studio",
   "OpenAI Responses": "OpenAI Responses",
   "Qiniu": "Qiniu",
   "Silicon": "Silicon",
   "Doubao": "Doubao",
   "PPIO": "PPIO",
   "Moonshot": "Moonshot",
   "DashScope": "DashScope",
   "Hunyuan": "Hunyuan"
}
